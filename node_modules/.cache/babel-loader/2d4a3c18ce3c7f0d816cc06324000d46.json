{"ast":null,"code":"import _classCallCheck from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdiel/Documents/bppnApps/myApps-Test/src/views/Loginpage.jsx\";\nimport React, { Component } from 'react';\nimport logo from '../garuda.png';\nimport '../App.css';\nimport { Card, CardBody } from 'reactstrap';\nimport { reduxForm, Field } from 'redux-form';\nimport CustomInput from './CustomInput.jsx';\nimport * as actions from '../actions';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux'; // import AuthContext from \"../context/auth-context\";\n\nvar Loginpage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Loginpage, _Component);\n\n  function Loginpage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Loginpage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Loginpage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: '',\n      password: ''\n    };\n\n    _this.loginHandler = function (formData) {\n      _this.props.signIn(formData);\n\n      if (!_this.props.errorMessage) {\n        _this.props.history.push('/admin/dashboard');\n      } else {\n        console.log(_this.props.errorMessage);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Loginpage, [{\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.props.handleSubmit;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"PUSAT DATA PENDUDUK\"), React.createElement(Card, {\n        style: {\n          backgroundColor: '#282c34',\n          alignContent: 'center',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.loginHandler),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"username\",\n        type: \"text\",\n        label: \"Username\",\n        id: \"username\",\n        placeholder: \"input username\",\n        component: CustomInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        id: \"password\",\n        label: \"Password\",\n        placeholder: \"input password\",\n        component: CustomInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), this.props.errorMessage ? React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.errorMessage) : null, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"SignIN\"))))));\n    }\n  }]);\n\n  return Loginpage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    errorMessage: state.auth.errorMessage\n  };\n}\n\nexport default compose(connect(mapStateToProps, actions), reduxForm({\n  form: 'login'\n}))(Loginpage);","map":{"version":3,"sources":["/home/abdiel/Documents/bppnApps/myApps-Test/src/views/Loginpage.jsx"],"names":["React","Component","logo","Card","CardBody","reduxForm","Field","CustomInput","actions","compose","connect","Loginpage","state","username","password","loginHandler","formData","props","signIn","errorMessage","history","push","console","log","handleSubmit","backgroundColor","alignContent","textAlign","mapStateToProps","isAuthenticated","auth","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,YAAP;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,YAA/B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAKRC,Y,GAAe,UAAAC,QAAQ,EAAI;AACzB,YAAKC,KAAL,CAAWC,MAAX,CAAkBF,QAAlB;;AACA,UAAI,CAAC,MAAKC,KAAL,CAAWE,YAAhB,EAA8B;AAC5B,cAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWE,YAAvB;AACD;AACF,K;;;;;;;6BACQ;AAAA,UACCK,YADD,GACkB,KAAKP,KADvB,CACCO,YADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEtB,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,EAGE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLuB,UAAAA,eAAe,EAAE,SADZ;AAELC,UAAAA,YAAY,EAAE,QAFT;AAGLC,UAAAA,SAAS,EAAE;AAHN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAEH,YAAY,CAAC,KAAKT,YAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,EAAE,EAAC,UAJL;AAKE,QAAA,WAAW,EAAC,gBALd;AAME,QAAA,SAAS,EAAER,WANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,EAAC,UAHL;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,WAAW,EAAC,gBALd;AAME,QAAA,SAAS,EAAEA,WANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXF,EAqBG,KAAKU,KAAL,CAAWE,YAAX,GACC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWE,YADd,CADD,GAIG,IAzBN,EA0BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF,CADF,CAPF,CAHF,CADF,CADF;AAgDD;;;;EAhEqBlB,S;;AAmExB,SAAS2B,eAAT,CAAyBhB,KAAzB,EAAgC;AAC9B,SAAO;AACLiB,IAAAA,eAAe,EAAEjB,KAAK,CAACkB,IAAN,CAAWD,eADvB;AAELV,IAAAA,YAAY,EAAEP,KAAK,CAACkB,IAAN,CAAWX;AAFpB,GAAP;AAID;;AAED,eAAeV,OAAO,CACpBC,OAAO,CACLkB,eADK,EAELpB,OAFK,CADa,EAKpBH,SAAS,CAAC;AAAE0B,EAAAA,IAAI,EAAE;AAAR,CAAD,CALW,CAAP,CAMbpB,SANa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../garuda.png';\nimport '../App.css';\nimport { Card, CardBody } from 'reactstrap';\nimport { reduxForm, Field } from 'redux-form';\nimport CustomInput from './CustomInput.jsx';\nimport * as actions from '../actions';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n// import AuthContext from \"../context/auth-context\";\n\nclass Loginpage extends Component {\n  state = {\n    username: '',\n    password: ''\n  };\n\n  loginHandler = formData => {\n    this.props.signIn(formData);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/admin/dashboard');\n    } else {\n      console.log(this.props.errorMessage);\n    }\n  };\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div>\n        <header className='App-header'>\n          <img src={logo} className='App-logo' alt='logo' />\n          <p>PUSAT DATA PENDUDUK</p>\n          <Card\n            style={{\n              backgroundColor: '#282c34',\n              alignContent: 'center',\n              textAlign: 'center'\n            }}\n          >\n            <CardBody>\n              <form onSubmit={handleSubmit(this.loginHandler)}>\n                <fieldset>\n                  <Field\n                    name='username'\n                    type='text'\n                    label='Username'\n                    id='username'\n                    placeholder='input username'\n                    component={CustomInput}\n                  />\n                </fieldset>\n                <fieldset>\n                  <Field\n                    name='password'\n                    type='password'\n                    id='password'\n                    label='Password'\n                    placeholder='input password'\n                    component={CustomInput}\n                  />\n                </fieldset>\n                {this.props.errorMessage ? (\n                  <div className='alert alert-danger'>\n                    {this.props.errorMessage}\n                  </div>\n                ) : null}\n                <button type='submit' className='btn btn-primary'>\n                  SignIN\n                </button>\n              </form>\n            </CardBody>\n          </Card>\n        </header>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    errorMessage: state.auth.errorMessage\n  };\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    actions\n  ),\n  reduxForm({ form: 'login' })\n)(Loginpage);\n"]},"metadata":{},"sourceType":"module"}