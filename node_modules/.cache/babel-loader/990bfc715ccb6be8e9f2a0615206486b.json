{"ast":null,"code":"import _classCallCheck from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdiel/Documents/bppnApps/myApps-Test/src/components/Navbars/DemoNavbar.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Container, InputGroup, InputGroupText, InputGroupAddon, Input } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport routes from \"routes.js\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n\n    _this.logOut = function () {\n      console.log(\"signout si calling\");\n\n      _this.props.logOut();\n    };\n\n    _this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"getBrand\",\n    value: function getBrand() {\n      var brandName = \"Default Brand\";\n      routes.map(function (prop, key) {\n        if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n          brandName = prop.name;\n        }\n\n        return null;\n      });\n      return brandName;\n    }\n  }, {\n    key: \"openSidebar\",\n    value: function openSidebar() {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    } // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"updateColor\",\n    value: function updateColor() {\n      if (window.innerWidth < 993 && this.state.isOpen) {\n        this.setState({\n          color: \"dark\"\n        });\n      } else {\n        this.setState({\n          color: \"transparent\"\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateColor.bind(this));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n        document.documentElement.classList.toggle(\"nav-open\");\n        this.sidebarToggle.current.classList.toggle(\"toggled\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return (// add or remove classes depending if we are on full-screen-maps page or not\n        React.createElement(Navbar, {\n          color: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"dark\" : this.state.color,\n          expand: \"lg\",\n          className: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Container, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          ref: this.sidebarToggle,\n          className: \"navbar-toggler\",\n          onClick: function onClick() {\n            return _this2.openSidebar();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar bar3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }))), React.createElement(NavbarBrand, {\n          href: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, this.getBrand())), React.createElement(NavbarToggler, {\n          onClick: this.toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"navbar-toggler-bar navbar-kebab\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        })), React.createElement(Collapse, {\n          isOpen: this.state.isOpen,\n          navbar: true,\n          className: \"justify-content-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          className: \"no-border\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Input, {\n          placeholder: \"Search...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(InputGroupAddon, {\n          addonType: \"append\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(InputGroupText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"nc-icon nc-zoom-split\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }))))), React.createElement(Nav, {\n          navbar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Nav, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, !this.props.isAuth ? React.createElement(NavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/login\",\n          key: \"login\",\n          className: \"nav-link btn-rotate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"login\")) : null, this.props.isAuth ? React.createElement(NavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/logout\",\n          key: \"logout\",\n          className: \"nav-link btn-rotate\",\n          onClick: this.logOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"logout\")) : null)))))\n      );\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Header);","map":{"version":3,"sources":["/home/abdiel/Documents/bppnApps/myApps-Test/src/components/Navbars/DemoNavbar.jsx"],"names":["React","Link","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Container","InputGroup","InputGroupText","InputGroupAddon","Input","connect","actions","routes","Header","props","logOut","console","log","state","isOpen","dropdownOpen","color","brandName","map","prop","key","window","location","href","indexOf","layout","path","name","document","documentElement","classList","toggle","sidebarToggle","current","innerWidth","setState","addEventListener","updateColor","bind","e","history","pathname","className","openSidebar","getBrand","isAuth","Component","mapStateToProps","auth","isAuthenticated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n  }\n\n  logOut = () => {\n    console.log(\"signout si calling\");\n    this.props.logOut();\n  };\n\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref={this.sidebarToggle}\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form>\n            <Nav navbar>\n              <Nav>\n                {!this.props.isAuth ? (\n                  <NavItem>\n                    <Link\n                      to=\"/login\"\n                      key=\"login\"\n                      className=\"nav-link btn-rotate\"\n                    >\n                      login\n                    </Link>\n                  </NavItem>\n                ) : null}\n                {this.props.isAuth ? (\n                  <NavItem>\n                    <Link\n                      to=\"/logout\"\n                      key=\"logout\"\n                      className=\"nav-link btn-rotate\"\n                      onClick={this.logOut}\n                    >\n                      logout\n                    </Link>\n                  </NavItem>\n                ) : null}\n              </Nav>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Header);\n"]},"metadata":{},"sourceType":"module"}