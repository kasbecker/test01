{"ast":null,"code":"import _regeneratorRuntime from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/abdiel/Documents/bppnApps/myApps-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { AUTH_SIGN_IN, AUTH_SIGN_OUT, AUTH_ERROR } from './types';\nexport var login = function login(data) {\n  console.log('ini data in action', data);\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispacth) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post('http://localhost:8000/apis/users/signIn', data);\n\n              case 3:\n                res = _context.sent;\n                console.log('res', res);\n                dispacth({\n                  type: AUTH_SIGN_IN,\n                  payload: res.data.token\n                });\n                localStorage.setItem('JWT_TOKEN', res.data.token);\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                dispacth({\n                  type: AUTH_ERROR,\n                  payload: 'username or password is not valid'\n                });\n                console.log('error', _context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var logOut = function logOut() {\n  return function (dispacth) {\n    localStorage.removeItem('JWT_TOKEN');\n    dispacth({\n      type: AUTH_SIGN_OUT,\n      payload: ''\n    });\n  };\n};","map":{"version":3,"sources":["/home/abdiel/Documents/bppnApps/myApps-Test/src/actions/auth.js"],"names":["axios","AUTH_SIGN_IN","AUTH_SIGN_OUT","AUTH_ERROR","login","data","console","log","dispacth","post","res","type","payload","token","localStorage","setItem","logOut","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,UAAtC,QAAwD,SAAxD;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI,EAAI;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC;AACA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMG,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEeR,KAAK,CAACS,IAAN,CAChB,yCADgB,EAEhBJ,IAFgB,CAFf;;AAAA;AAEGK,gBAAAA,GAFH;AAMHJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,GAAnB;AACAF,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAEV,YADC;AAEPW,kBAAAA,OAAO,EAAEF,GAAG,CAACL,IAAJ,CAASQ;AAFX,iBAAD,CAAR;AAIAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCL,GAAG,CAACL,IAAJ,CAASQ,KAA3C;AAXG;AAAA;;AAAA;AAAA;AAAA;AAaHL,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAER,UADC;AAEPS,kBAAAA,OAAO,EAAE;AAFF,iBAAD,CAAR;AAIAN,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBD,CAtBM;AAwBP,OAAO,IAAMS,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO,UAAAR,QAAQ,EAAI;AACjBM,IAAAA,YAAY,CAACG,UAAb,CAAwB,WAAxB;AACAT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,aADC;AAEPU,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM","sourcesContent":["import axios from 'axios';\nimport { AUTH_SIGN_IN, AUTH_SIGN_OUT, AUTH_ERROR } from './types';\n\nexport const login = data => {\n  console.log('ini data in action', data);\n  return async dispacth => {\n    try {\n      const res = await axios.post(\n        'http://localhost:8000/apis/users/signIn',\n        data\n      );\n      console.log('res', res);\n      dispacth({\n        type: AUTH_SIGN_IN,\n        payload: res.data.token\n      });\n      localStorage.setItem('JWT_TOKEN', res.data.token);\n    } catch (error) {\n      dispacth({\n        type: AUTH_ERROR,\n        payload: 'username or password is not valid'\n      });\n      console.log('error', error);\n    }\n  };\n};\n\nexport const logOut = () => {\n  return dispacth => {\n    localStorage.removeItem('JWT_TOKEN');\n    dispacth({\n      type: AUTH_SIGN_OUT,\n      payload: ''\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}